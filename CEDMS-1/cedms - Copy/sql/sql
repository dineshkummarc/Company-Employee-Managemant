-- Create the database
CREATE DATABASE IF NOT EXISTS company_db;
USE company_db;

-- Create companies table
CREATE TABLE IF NOT EXISTS companies (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    admin_first_name VARCHAR(50) NOT NULL,
    admin_last_name VARCHAR(50) NOT NULL,
    ceo_name VARCHAR(100) NOT NULL,
    ceo_image VARCHAR(255),
    company_name VARCHAR(100) NOT NULL,
    about_company TEXT,
    ownership_type VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    company_logo VARCHAR(255),
    employee_count INT(11),
    department_count INT(11),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create partners table
CREATE TABLE IF NOT EXISTS partners (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

-- Create departments table
CREATE TABLE IF NOT EXISTS departments (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    name VARCHAR(100) NOT NULL,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS department (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    deptName TEXT NOT NULL PRIMARY KEY,
    aboutDept TEXT NOT NULL,
    deptHead TEXT NOT NULL,
    aboutHEAD TEXT NOT NULL,
    company_id INT(11),
    type ENUM( 'weekly', 'monthly') NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

-- Create goals table for tracking company goals
CREATE TABLE IF NOT EXISTS goals (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    type ENUM('daily', 'weekly', 'monthly', 'yearly') NOT NULL,
    description TEXT NOT NULL,
    status ENUM('pending', 'completed', 'in-progress') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

-- Create financial_summary table to store financial data
CREATE TABLE IF NOT EXISTS financial_summary (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    revenue DECIMAL(12,2) DEFAULT 0,
    investment DECIMAL(12,2) DEFAULT 0,
    loss DECIMAL(12,2) DEFAULT 0,
    period VARCHAR(20) NOT NULL, -- e.g., 'Q1 2024', 'March 2024'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

-- Create contacts table to store company contact information
CREATE TABLE IF NOT EXISTS contacts (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    email VARCHAR(100),
    phone VARCHAR(20),
    address TEXT,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);

-- Create social_media table to store company social media links
CREATE TABLE IF NOT EXISTS social_media (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    company_id INT(11),
    platform VARCHAR(50) NOT NULL, -- e.g., 'facebook', 'twitter'
    url VARCHAR(255) NOT NULL,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);





-- Sample financial data
INSERT INTO financial_summary (company_id, revenue, investment, loss, period)
VALUES 
(1, 85000.00, 50000.00, 15000.00, 'Q1 2024');

-- Sample contact data
INSERT INTO contacts (company_id, email, phone, address)
VALUES 
(1, 'info@samplecompany.com', '91+ 7310638297', 'Janakpuri, Delhi - 201301');

ALTER TABLE department ADD COLUMN weekGoal TEXT;
ALTER TABLE department ADD COLUMN monthlyGoal TEXT;
ALTER TABLE department DROP COLUMN description;

ALTER TABLE department 
ADD CONSTRAINT fk_department_company FOREIGN KEY (company_id) 
REFERENCES companies(id) ON DELETE CASCADE;

ALTER TABLE financial_summary 
ADD COLUMN department_id INT(11),
ADD CONSTRAINT fk_financial_summary_department FOREIGN KEY (department_id) 
REFERENCES department(id) ON DELETE CASCADE;

CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empName VARCHAR(191) NOT NULL,
    email VARCHAR(191) UNIQUE NOT NULL,
    aboutEmployee TEXT,
    attendance_percentage DECIMAL(5,2) CHECK (attendance_percentage BETWEEN 0 AND 100),
    dailyGoals TEXT,
    weeklyGoals TEXT,
    joining_date DATE NOT NULL,
    deptName VARCHAR(191) NOT NULL,
    headName VARCHAR(191) NOT NULL
);

CREATE TABLE employee_main (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    company VARCHAR(255) NOT NULL,
    deptName VARCHAR(255) NOT NULL,
    FOREIGN KEY (deptName) REFERENCES departments(deptName) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE employees 
ADD CONSTRAINT fk_deptName 
FOREIGN KEY (deptName) 
REFERENCES departments(deptName) 
ON DELETE CASCADE 
ON UPDATE CASCADE;


SELECT 
    e.id AS Employee_ID,
    e.empName AS Employee_Name,
    e.email AS Email,
    e.aboutEmployee AS About,
    e.attendance_percentage AS Attendance,
    e.dailyGoals AS Daily_Goals,
    e.weeklyGoals AS Weekly_Goals,
    e.joining_date AS Joining_Date,
    e.deptName AS Department,
    e.headName AS Head_Name,
    em.username AS Employee_Username,
    em.company AS Company
FROM employees e
INNER JOIN employee_main em ON e.deptName = em.deptName;

